name: Documentation Automation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'app/api/**/*.ts'
      - 'prisma/schema.prisma'
      - 'docs/**/*.md'
  pull_request:
    branches: [ main ]
    paths:
      - 'app/api/**/*.ts'
      - 'prisma/schema.prisma'
      - 'docs/**/*.md'
  schedule:
    # Run weekly validation on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  generate-docs:
    name: Generate Documentation
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd docs/docs-site
        npm ci

    - name: Generate API documentation
      run: |
        cd docs/docs-site/scripts
        node generate-api-docs.js

    - name: Generate schema documentation
      run: |
        cd docs/docs-site/scripts
        node generate-schema-docs.js

    - name: Validate documentation
      run: |
        cd docs/docs-site/scripts
        node validate-docs.js
      continue-on-error: true

    - name: Build documentation site
      run: |
        cd docs/docs-site
        npm run build

    - name: Upload validation report
      uses: actions/upload-artifact@v4
      with:
        name: documentation-validation-report
        path: docs/docs-site/validation-report.md
        retention-days: 30

    - name: Comment on PR with validation results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = 'docs/docs-site/validation-report.md';

          if (fs.existsSync(path)) {
            const report = fs.readFileSync(path, 'utf8');
            const summary = report.split('\n').slice(0, 20).join('\n');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸ“š Documentation Validation Results\n\n${summary}\n\n[View full report in artifacts]`
            });
          }

    - name: Commit generated documentation
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docs/docs-site/docs/reference/api/*.md
        git add docs/docs-site/docs/developer/architecture/database.md
        git diff --staged --quiet || git commit -m "ðŸ“š Auto-update generated documentation

        ðŸ¤– Generated with [GitHub Actions](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

        - Updated API documentation from route changes
        - Refreshed database schema documentation
        - Validation report available in artifacts"
        git push

  validate-weekly:
    name: Weekly Documentation Health Check
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd docs/docs-site
        npm ci

    - name: Run comprehensive validation
      run: |
        cd docs/docs-site/scripts
        node validate-docs.js
      continue-on-error: true

    - name: Upload weekly report
      uses: actions/upload-artifact@v4
      with:
        name: weekly-docs-health-report
        path: docs/docs-site/validation-report.md
        retention-days: 90

    - name: Create issue for critical problems
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const reportPath = 'docs/docs-site/validation-report.md';

          if (fs.existsSync(reportPath)) {
            const report = fs.readFileSync(reportPath, 'utf8');
            const healthMatch = report.match(/Overall Score.*?(\d+)%/);
            const score = healthMatch ? parseInt(healthMatch[1]) : 0;

            if (score < 80) {
              github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `ðŸ“š Documentation Health Alert (${score}%)`,
                body: `## Weekly Documentation Health Check Failed

                The automated documentation validation found critical issues that need attention.

                **Health Score**: ${score}% ðŸ”´

                ### Action Required
                - Review the validation report in the artifacts
                - Fix broken links and missing metadata
                - Update stale content

                ### Report Summary
                \`\`\`
                ${report.split('\n').slice(6, 15).join('\n')}
                \`\`\`

                This issue was auto-generated by the weekly documentation health check.`,
                labels: ['documentation', 'maintenance', 'automated']
              });
            }
          }

  test-examples:
    name: Test Code Examples
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Extract and test code examples
      run: |
        # Extract TypeScript code blocks from markdown files
        find docs -name "*.md" -exec grep -l "```typescript" {} \; | while read file; do
          echo "Testing examples in: $file"
          # Extract code blocks and create temp files for type checking
          awk '/```typescript/,/```/' "$file" | sed '/```/d' > "temp_${file//\//_}.ts" 2>/dev/null || true
        done

        # Type check extracted examples
        if ls temp_*.ts 1> /dev/null 2>&1; then
          npx tsc --noEmit --skipLibCheck temp_*.ts || echo "Some examples have type issues"
          rm temp_*.ts
        fi

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [generate-docs, test-examples]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd docs/docs-site
        npm ci

    - name: Build documentation
      run: |
        cd docs/docs-site
        npm run build

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/docs-site/build
        cname: docs.arqcashflow.com  # Optional: set your custom domain

    - name: Notify deployment
      run: |
        echo "ðŸ“š Documentation deployed to GitHub Pages"
        echo "ðŸ”— Available at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"